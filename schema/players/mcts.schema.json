{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "MCTS player",
    "description": "Monte carlo tree search player schema",
    "type": "object",
    "properties": {
        "actionGenerator": {
            "description": "Used to generate actions used in simulations",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Action generator type",
                    "$ref": "action_generators/types.schema.json"
                },
                "data": {
                    "description": "Check the 'action_generators' folder for more information"
                }
            },
            "required": [
                "type",
                "data"
            ],
            "additionalProperties": false
        },
        "explorationFactor": {
            "description": "The exploration factor in UCB formula",
            "type": "number"
        },
        "goalMatrix": {
            "description": "A 2D coefficient matrix representing each player's goal",
            "type": "array",
            "items": {
                "type": "array",
                "items": {
                    "type": "number"
                },
                "minItems": 1
            },
            "minItems": 1
        },
        "rolloutPlayer": {
            "description": "Rollout policy",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Player type",
                    "$ref": "players/types.schema.json"
                },
                "data": {
                    "description": "Check the 'players' folder for more information"
                }
            },
            "required": [
                "type",
                "data"
            ],
            "additionalProperties": false
        },
        "parallel": {
            "description": "If false, the MCTS algorithm ignores `StartThinking` and `StopThinking` requests, and runs the specified number of iterations during `GetBestAction` requests without parallelization",
            "type": "boolean"
        }
    },
    "oneOf": [
        {
            "properties": {
                "explorationFactor": {},
                "goalMatrix": {},
                "actionGenerator": {},
                "rolloutPlayer": {},
                "parallel": {
                    "const": true
                },
                "workers": {
                    "description": "The number of parallel workers. If zero, hardware concurrency is used",
                    "type": "integer",
                    "minimum": 0
                }
            },
            "required": [
                "workers"
            ],
            "additionalProperties": false
        },
        {
            "properties": {
                "explorationFactor": {},
                "goalMatrix": {},
                "actionGenerator": {},
                "rolloutPlayer": {},
                "parallel": {
                    "const": false
                },
                "iterations": {
                    "description": "The number of iterations",
                    "type": "integer",
                    "minimum": 1
                }
            },
            "required": [
                "iterations"
            ],
            "additionalProperties": false
        }
    ],
    "required": [
        "actionGenerator",
        "explorationFactor",
        "goalMatrix",
        "rolloutPlayer",
        "parallel"
    ]
}